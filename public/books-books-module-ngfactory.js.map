{"version":3,"sources":["webpack:///../modules/entity/index.ts","webpack:///../modules/entity/public_api.ts","webpack:///../modules/entity/src/create_adapter.ts","webpack:///../modules/entity/src/entity_state.ts","webpack:///../modules/entity/src/index.ts","webpack:///../modules/entity/src/models.ts","webpack:///../modules/entity/src/sorted_state_adapter.ts","webpack:///../modules/entity/src/state_adapter.ts","webpack:///../modules/entity/src/state_selectors.ts","webpack:///../modules/entity/src/unsorted_state_adapter.ts","webpack:///../node_modules/@angular/material/progress-spinner/typings/index.d.ts.MatProgressSpinner.html","webpack:///../node_modules/@angular/material/progress-spinner/typings/index.d.ts.MatSpinner.html","webpack:///../node_modules/@ngrx/db/index.js","webpack:///../node_modules/rxjs/internal/Scheduler.js","webpack:///./app/books/actions/book.actions.ts","webpack:///./app/books/actions/collection.actions.ts","webpack:///./app/books/books-routing.module.ts","webpack:///./app/books/books.module.ts","webpack:///./app/books/components/book-authors.component.ts.BookAuthorsComponent.html","webpack:///./app/books/components/book-authors.component.ts","webpack:///./app/books/components/book-detail.component.ts.BookDetailComponent.html","webpack:///./app/books/components/book-detail.component.ts","webpack:///./app/books/components/book-preview-list.component.ts.BookPreviewListComponent.html","webpack:///./app/books/components/book-preview-list.component.ts","webpack:///./app/books/components/book-preview.component.ts.BookPreviewComponent.html","webpack:///./app/books/components/book-preview.component.ts","webpack:///./app/books/components/book-search.component.ts.BookSearchComponent.html","webpack:///./app/books/components/book-search.component.ts","webpack:///./app/books/components/index.ts","webpack:///./app/books/containers/collection-page.component.ts.CollectionPageComponent.html","webpack:///./app/books/containers/collection-page.component.ts","webpack:///./app/books/containers/find-book-page.component.ts.FindBookPageComponent.html","webpack:///./app/books/containers/find-book-page.component.ts","webpack:///./app/books/containers/selected-book-page.component.ts.SelectedBookPageComponent.html","webpack:///./app/books/containers/selected-book-page.component.ts","webpack:///./app/books/containers/view-book-page.component.ts.ViewBookPageComponent.html","webpack:///./app/books/containers/view-book-page.component.ts","webpack:///./app/books/effects/book.effects.ts","webpack:///./app/books/effects/collection.effects.ts","webpack:///./app/books/guards/book-exists.guard.ts","webpack:///./app/books/reducers/books.reducer.ts","webpack:///./app/books/reducers/collection.reducer.ts","webpack:///./app/books/reducers/index.ts","webpack:///./app/books/reducers/search.reducer.ts","webpack:///./app/shared/pipes/add-commas.pipe.ts","webpack:///./app/shared/pipes/ellipsis.pipe.ts","webpack:///./app/shared/pipes/index.ts"],"names":[],"mappings":"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","file":"books-books-module-ngfactory.js","sourcesContent":["/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\nexport * from './public_api';\n","export * from './src/index';\n","import { createSelector } from '@ngrx/store';\nimport {\n  EntityDefinition,\n  Comparer,\n  IdSelector,\n  EntityAdapter,\n} from './models';\nimport { createInitialStateFactory } from './entity_state';\nimport { createSelectorsFactory } from './state_selectors';\nimport { createSortedStateAdapter } from './sorted_state_adapter';\nimport { createUnsortedStateAdapter } from './unsorted_state_adapter';\n\nexport function createEntityAdapter<T>(\n  options: {\n    selectId?: IdSelector<T>;\n    sortComparer?: false | Comparer<T>;\n  } = {}\n): EntityAdapter<T> {\n  const { selectId, sortComparer }: EntityDefinition<T> = {\n    sortComparer: false,\n    selectId: (instance: any) => instance.id,\n    ...options,\n  };\n\n  const stateFactory = createInitialStateFactory<T>();\n  const selectorsFactory = createSelectorsFactory<T>();\n  const stateAdapter = sortComparer\n    ? createSortedStateAdapter(selectId, sortComparer)\n    : createUnsortedStateAdapter(selectId);\n\n  return {\n    selectId,\n    sortComparer,\n    ...stateFactory,\n    ...selectorsFactory,\n    ...stateAdapter,\n  };\n}\n","import { EntityState } from './models';\n\nexport function getInitialEntityState<V>(): EntityState<V> {\n  return {\n    ids: [],\n    entities: {},\n  };\n}\n\nexport function createInitialStateFactory<V>() {\n  function getInitialState(): EntityState<V>;\n  function getInitialState<S extends object>(\n    additionalState: S\n  ): EntityState<V> & S;\n  function getInitialState(additionalState: any = {}): any {\n    return Object.assign(getInitialEntityState(), additionalState);\n  }\n\n  return { getInitialState };\n}\n","export { createEntityAdapter } from './create_adapter';\nexport { Dictionary, EntityState, EntityAdapter, Update } from './models';\n","export type ComparerStr<T> = {\n  (a: T, b: T): string;\n};\n\nexport type ComparerNum<T> = {\n  (a: T, b: T): number;\n};\n\nexport type Comparer<T> = ComparerNum<T> | ComparerStr<T>;\n\nexport type IdSelectorStr<T> = {\n  (model: T): string;\n};\n\nexport type IdSelectorNum<T> = {\n  (model: T): number;\n};\n\nexport type IdSelector<T> = IdSelectorStr<T> | IdSelectorNum<T>;\n\nexport type DictionaryNum<T> = {\n  [id: number]: T;\n};\n\nexport abstract class Dictionary<T> implements DictionaryNum<T> {\n  [id: string]: T;\n}\n\nexport type UpdateStr<T> = {\n  id: string;\n  changes: Partial<T>;\n};\n\nexport type UpdateNum<T> = {\n  id: number;\n  changes: Partial<T>;\n};\n\nexport type Update<T> = UpdateStr<T> | UpdateNum<T>;\n\nexport interface EntityState<T> {\n  ids: string[] | number[];\n  entities: Dictionary<T>;\n}\n\nexport interface EntityDefinition<T> {\n  selectId: IdSelector<T>;\n  sortComparer: false | Comparer<T>;\n}\n\nexport interface EntityStateAdapter<T> {\n  addOne<S extends EntityState<T>>(entity: T, state: S): S;\n  addMany<S extends EntityState<T>>(entities: T[], state: S): S;\n  addAll<S extends EntityState<T>>(entities: T[], state: S): S;\n\n  removeOne<S extends EntityState<T>>(key: string, state: S): S;\n  removeOne<S extends EntityState<T>>(key: number, state: S): S;\n\n  removeMany<S extends EntityState<T>>(keys: string[], state: S): S;\n  removeMany<S extends EntityState<T>>(keys: number[], state: S): S;\n\n  removeAll<S extends EntityState<T>>(state: S): S;\n\n  updateOne<S extends EntityState<T>>(update: Update<T>, state: S): S;\n  updateMany<S extends EntityState<T>>(updates: Update<T>[], state: S): S;\n\n  upsertOne<S extends EntityState<T>>(entity: T, state: S): S;\n  upsertMany<S extends EntityState<T>>(entities: T[], state: S): S;\n}\n\nexport type EntitySelectors<T, V> = {\n  selectIds: (state: V) => string[] | number[];\n  selectEntities: (state: V) => Dictionary<T>;\n  selectAll: (state: V) => T[];\n  selectTotal: (state: V) => number;\n};\n\nexport interface EntityAdapter<T> extends EntityStateAdapter<T> {\n  selectId: IdSelector<T>;\n  sortComparer: false | Comparer<T>;\n  getInitialState(): EntityState<T>;\n  getInitialState<S extends object>(state: S): EntityState<T> & S;\n  getSelectors(): EntitySelectors<T, EntityState<T>>;\n  getSelectors<V>(\n    selectState: (state: V) => EntityState<T>\n  ): EntitySelectors<T, V>;\n}\n","import {\n  EntityState,\n  IdSelector,\n  Comparer,\n  Dictionary,\n  EntityStateAdapter,\n  Update,\n} from './models';\nimport { createStateOperator, DidMutate } from './state_adapter';\nimport { createUnsortedStateAdapter } from './unsorted_state_adapter';\n\nexport function createSortedStateAdapter<T>(\n  selectId: IdSelector<T>,\n  sort: Comparer<T>\n): EntityStateAdapter<T>;\nexport function createSortedStateAdapter<T>(selectId: any, sort: any): any {\n  type R = EntityState<T>;\n\n  const { removeOne, removeMany, removeAll } = createUnsortedStateAdapter(\n    selectId\n  );\n\n  function addOneMutably(entity: T, state: R): DidMutate;\n  function addOneMutably(entity: any, state: any): DidMutate {\n    return addManyMutably([entity], state);\n  }\n\n  function addManyMutably(newModels: T[], state: R): DidMutate;\n  function addManyMutably(newModels: any[], state: any): DidMutate {\n    const models = newModels.filter(\n      model => !(selectId(model) in state.entities)\n    );\n\n    if (models.length === 0) {\n      return DidMutate.None;\n    } else {\n      merge(models, state);\n      return DidMutate.Both;\n    }\n  }\n\n  function addAllMutably(models: T[], state: R): DidMutate;\n  function addAllMutably(models: any[], state: any): DidMutate {\n    state.entities = {};\n    state.ids = [];\n\n    addManyMutably(models, state);\n\n    return DidMutate.Both;\n  }\n\n  function updateOneMutably(update: Update<T>, state: R): DidMutate;\n  function updateOneMutably(update: any, state: any): DidMutate {\n    return updateManyMutably([update], state);\n  }\n\n  function takeUpdatedModel(models: T[], update: Update<T>, state: R): boolean;\n  function takeUpdatedModel(models: any[], update: any, state: any): boolean {\n    if (!(update.id in state.entities)) {\n      return false;\n    }\n\n    const original = state.entities[update.id];\n    const updated = Object.assign({}, original, update.changes);\n    const newKey = selectId(updated);\n\n    delete state.entities[update.id];\n\n    models.push(updated);\n\n    return newKey !== update.id;\n  }\n\n  function updateManyMutably(updates: Update<T>[], state: R): DidMutate;\n  function updateManyMutably(updates: any[], state: any): DidMutate {\n    const models: T[] = [];\n\n    const didMutateIds =\n      updates.filter(update => takeUpdatedModel(models, update, state)).length >\n      0;\n\n    if (models.length === 0) {\n      return DidMutate.None;\n    } else {\n      const originalIds = state.ids;\n      const updatedIndexes: any[] = [];\n      state.ids = state.ids.filter((id: any, index: number) => {\n        if (id in state.entities) {\n          return true;\n        } else {\n          updatedIndexes.push(index);\n          return false;\n        }\n      });\n\n      merge(models, state);\n\n      if (\n        !didMutateIds &&\n        updatedIndexes.every((i: number) => state.ids[i] === originalIds[i])\n      ) {\n        return DidMutate.EntitiesOnly;\n      } else {\n        return DidMutate.Both;\n      }\n    }\n  }\n\n  function upsertOneMutably(entity: T, state: R): DidMutate;\n  function upsertOneMutably(entity: any, state: any): DidMutate {\n    return upsertManyMutably([entity], state);\n  }\n\n  function upsertManyMutably(entities: T[], state: R): DidMutate;\n  function upsertManyMutably(entities: any[], state: any): DidMutate {\n    const added: any[] = [];\n    const updated: any[] = [];\n\n    for (const entity of entities) {\n      const id = selectId(entity);\n      if (id in state.entities) {\n        updated.push({ id, changes: entity });\n      } else {\n        added.push(entity);\n      }\n    }\n\n    const didMutateByUpdated = updateManyMutably(updated, state);\n    const didMutateByAdded = addManyMutably(added, state);\n\n    switch (true) {\n      case didMutateByAdded === DidMutate.None &&\n        didMutateByUpdated === DidMutate.None:\n        return DidMutate.None;\n      case didMutateByAdded === DidMutate.Both ||\n        didMutateByUpdated === DidMutate.Both:\n        return DidMutate.Both;\n      default:\n        return DidMutate.EntitiesOnly;\n    }\n  }\n\n  function merge(models: T[], state: R): void;\n  function merge(models: any[], state: any): void {\n    models.sort(sort);\n\n    const ids: any[] = [];\n\n    let i = 0;\n    let j = 0;\n\n    while (i < models.length && j < state.ids.length) {\n      const model = models[i];\n      const modelId = selectId(model);\n      const entityId = state.ids[j];\n      const entity = state.entities[entityId];\n\n      if (sort(model, entity) <= 0) {\n        ids.push(modelId);\n        i++;\n      } else {\n        ids.push(entityId);\n        j++;\n      }\n    }\n\n    if (i < models.length) {\n      state.ids = ids.concat(models.slice(i).map(selectId));\n    } else {\n      state.ids = ids.concat(state.ids.slice(j));\n    }\n\n    models.forEach((model, i) => {\n      state.entities[selectId(model)] = model;\n    });\n  }\n\n  return {\n    removeOne,\n    removeMany,\n    removeAll,\n    addOne: createStateOperator(addOneMutably),\n    updateOne: createStateOperator(updateOneMutably),\n    upsertOne: createStateOperator(upsertOneMutably),\n    addAll: createStateOperator(addAllMutably),\n    addMany: createStateOperator(addManyMutably),\n    updateMany: createStateOperator(updateManyMutably),\n    upsertMany: createStateOperator(upsertManyMutably),\n  };\n}\n","import { EntityState, EntityStateAdapter } from './models';\n\nexport enum DidMutate {\n  EntitiesOnly,\n  Both,\n  None,\n}\n\nexport function createStateOperator<V, R>(\n  mutator: (arg: R, state: EntityState<V>) => DidMutate\n): EntityState<V>;\nexport function createStateOperator<V, R>(\n  mutator: (arg: any, state: any) => DidMutate\n): any {\n  return function operation<S extends EntityState<V>>(arg: R, state: any): S {\n    const clonedEntityState: EntityState<V> = {\n      ids: [...state.ids],\n      entities: { ...state.entities },\n    };\n\n    const didMutate = mutator(arg, clonedEntityState);\n\n    if (didMutate === DidMutate.Both) {\n      return Object.assign({}, state, clonedEntityState);\n    }\n\n    if (didMutate === DidMutate.EntitiesOnly) {\n      return {\n        ...state,\n        entities: clonedEntityState.entities,\n      };\n    }\n\n    return state;\n  };\n}\n","import { createSelector } from '@ngrx/store';\nimport { EntityState, EntitySelectors, Dictionary } from './models';\n\nexport function createSelectorsFactory<T>() {\n  function getSelectors(): EntitySelectors<T, EntityState<T>>;\n  function getSelectors<V>(\n    selectState: (state: V) => EntityState<T>\n  ): EntitySelectors<T, V>;\n  function getSelectors(\n    selectState?: (state: any) => EntityState<T>\n  ): EntitySelectors<T, any> {\n    const selectIds = (state: any) => state.ids;\n    const selectEntities = (state: EntityState<T>) => state.entities;\n    const selectAll = createSelector(\n      selectIds,\n      selectEntities,\n      (ids: T[], entities: Dictionary<T>): any =>\n        ids.map((id: any) => (entities as any)[id])\n    );\n\n    const selectTotal = createSelector(selectIds, ids => ids.length);\n\n    if (!selectState) {\n      return {\n        selectIds,\n        selectEntities,\n        selectAll,\n        selectTotal,\n      };\n    }\n\n    return {\n      selectIds: createSelector(selectState, selectIds),\n      selectEntities: createSelector(selectState, selectEntities),\n      selectAll: createSelector(selectState, selectAll),\n      selectTotal: createSelector(selectState, selectTotal),\n    };\n  }\n\n  return { getSelectors };\n}\n","import { EntityState, EntityStateAdapter, IdSelector, Update } from './models';\nimport { createStateOperator, DidMutate } from './state_adapter';\n\nexport function createUnsortedStateAdapter<T>(\n  selectId: IdSelector<T>\n): EntityStateAdapter<T>;\nexport function createUnsortedStateAdapter<T>(selectId: IdSelector<T>): any {\n  type R = EntityState<T>;\n\n  function addOneMutably(entity: T, state: R): DidMutate;\n  function addOneMutably(entity: any, state: any): DidMutate {\n    const key = selectId(entity);\n\n    if (key in state.entities) {\n      return DidMutate.None;\n    }\n\n    state.ids.push(key);\n    state.entities[key] = entity;\n\n    return DidMutate.Both;\n  }\n\n  function addManyMutably(entities: T[], state: R): DidMutate;\n  function addManyMutably(entities: any[], state: any): DidMutate {\n    let didMutate = false;\n\n    for (const entity of entities) {\n      didMutate = addOneMutably(entity, state) !== DidMutate.None || didMutate;\n    }\n\n    return didMutate ? DidMutate.Both : DidMutate.None;\n  }\n\n  function addAllMutably(entities: T[], state: R): DidMutate;\n  function addAllMutably(entities: any[], state: any): DidMutate {\n    state.ids = [];\n    state.entities = {};\n\n    addManyMutably(entities, state);\n\n    return DidMutate.Both;\n  }\n\n  function removeOneMutably(key: T, state: R): DidMutate;\n  function removeOneMutably(key: any, state: any): DidMutate {\n    return removeManyMutably([key], state);\n  }\n\n  function removeManyMutably(keys: T[], state: R): DidMutate;\n  function removeManyMutably(keys: any[], state: any): DidMutate {\n    const didMutate =\n      keys\n        .filter(key => key in state.entities)\n        .map(key => delete state.entities[key]).length > 0;\n\n    if (didMutate) {\n      state.ids = state.ids.filter((id: any) => id in state.entities);\n    }\n\n    return didMutate ? DidMutate.Both : DidMutate.None;\n  }\n\n  function removeAll<S extends R>(state: S): S;\n  function removeAll<S extends R>(state: any): S {\n    return Object.assign({}, state, {\n      ids: [],\n      entities: {},\n    });\n  }\n\n  function takeNewKey(\n    keys: { [id: string]: string },\n    update: Update<T>,\n    state: R\n  ): void;\n  function takeNewKey(\n    keys: { [id: string]: any },\n    update: Update<T>,\n    state: any\n  ): boolean {\n    const original = state.entities[update.id];\n    const updated: T = Object.assign({}, original, update.changes);\n    const newKey = selectId(updated);\n    const hasNewKey = newKey !== update.id;\n\n    if (hasNewKey) {\n      keys[update.id] = newKey;\n      delete state.entities[update.id];\n    }\n\n    state.entities[newKey] = updated;\n\n    return hasNewKey;\n  }\n\n  function updateOneMutably(update: Update<T>, state: R): DidMutate;\n  function updateOneMutably(update: any, state: any): DidMutate {\n    return updateManyMutably([update], state);\n  }\n\n  function updateManyMutably(updates: Update<T>[], state: R): DidMutate;\n  function updateManyMutably(updates: any[], state: any): DidMutate {\n    const newKeys: { [id: string]: string } = {};\n\n    updates = updates.filter(update => update.id in state.entities);\n\n    const didMutateEntities = updates.length > 0;\n\n    if (didMutateEntities) {\n      const didMutateIds =\n        updates.filter(update => takeNewKey(newKeys, update, state)).length > 0;\n\n      if (didMutateIds) {\n        state.ids = state.ids.map((id: any) => newKeys[id] || id);\n        return DidMutate.Both;\n      } else {\n        return DidMutate.EntitiesOnly;\n      }\n    }\n\n    return DidMutate.None;\n  }\n\n  function upsertOneMutably(entity: T, state: R): DidMutate;\n  function upsertOneMutably(entity: any, state: any): DidMutate {\n    return upsertManyMutably([entity], state);\n  }\n\n  function upsertManyMutably(entities: T[], state: R): DidMutate;\n  function upsertManyMutably(entities: any[], state: any): DidMutate {\n    const added: any[] = [];\n    const updated: any[] = [];\n\n    for (const entity of entities) {\n      const id = selectId(entity);\n      if (id in state.entities) {\n        updated.push({ id, changes: entity });\n      } else {\n        added.push(entity);\n      }\n    }\n\n    const didMutateByUpdated = updateManyMutably(updated, state);\n    const didMutateByAdded = addManyMutably(added, state);\n\n    switch (true) {\n      case didMutateByAdded === DidMutate.None &&\n        didMutateByUpdated === DidMutate.None:\n        return DidMutate.None;\n      case didMutateByAdded === DidMutate.Both ||\n        didMutateByUpdated === DidMutate.Both:\n        return DidMutate.Both;\n      default:\n        return DidMutate.EntitiesOnly;\n    }\n  }\n\n  return {\n    removeAll,\n    addOne: createStateOperator(addOneMutably),\n    addMany: createStateOperator(addManyMutably),\n    addAll: createStateOperator(addAllMutably),\n    updateOne: createStateOperator(updateOneMutably),\n    updateMany: createStateOperator(updateManyMutably),\n    upsertOne: createStateOperator(upsertOneMutably),\n    upsertMany: createStateOperator(upsertManyMutably),\n    removeOne: createStateOperator(removeOneMutably),\n    removeMany: createStateOperator(removeManyMutably),\n  };\n}\n","<svg [style.width.px]=\"diameter\" [style.height.px]=\"diameter\" [attr.viewBox]=\"_viewBox\" preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\"><circle cx=\"50%\" cy=\"50%\" [attr.r]=\"_circleRadius\" [style.animation-name]=\"'mat-progress-spinner-stroke-rotate-' + diameter\" [style.stroke-dashoffset.px]=\"_strokeDashOffset\" [style.stroke-dasharray.px]=\"_strokeCircumference\" [style.stroke-width.%]=\"_circleStrokeWidth\"></circle></svg>","<svg [style.width.px]=\"diameter\" [style.height.px]=\"diameter\" [attr.viewBox]=\"_viewBox\" preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\"><circle cx=\"50%\" cy=\"50%\" [attr.r]=\"_circleRadius\" [style.animation-name]=\"'mat-progress-spinner-stroke-rotate-' + diameter\" [style.stroke-dashoffset.px]=\"_strokeDashOffset\" [style.stroke-dasharray.px]=\"_strokeCircumference\" [style.stroke-width.%]=\"_circleStrokeWidth\"></circle></svg>","export * from './src/database';\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Scheduler = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map","import { Action } from '@ngrx/store';\nimport { Book } from '../models/book';\n\nexport enum BookActionTypes {\n  Search = '[Book] Search',\n  SearchComplete = '[Book] Search Complete',\n  SearchError = '[Book] Search Error',\n  Load = '[Book] Load',\n  Select = '[Book] Select',\n}\n\n/**\n * Every action is comprised of at least a type and an optional\n * payload. Expressing actions as classes enables powerful\n * type checking in reducer functions.\n *\n * See Discriminated Unions: https://www.typescriptlang.org/docs/handbook/advanced-types.html#discriminated-unions\n */\nexport class Search implements Action {\n  readonly type = BookActionTypes.Search;\n\n  constructor(public payload: string) {}\n}\n\nexport class SearchComplete implements Action {\n  readonly type = BookActionTypes.SearchComplete;\n\n  constructor(public payload: Book[]) {}\n}\n\nexport class SearchError implements Action {\n  readonly type = BookActionTypes.SearchError;\n\n  constructor(public payload: string) {}\n}\n\nexport class Load implements Action {\n  readonly type = BookActionTypes.Load;\n\n  constructor(public payload: Book) {}\n}\n\nexport class Select implements Action {\n  readonly type = BookActionTypes.Select;\n\n  constructor(public payload: string) {}\n}\n\n/**\n * Export a type alias of all actions in this action group\n * so that reducers can easily compose action types\n */\nexport type BookActionsUnion =\n  | Search\n  | SearchComplete\n  | SearchError\n  | Load\n  | Select;\n","import { Action } from '@ngrx/store';\nimport { Book } from '../models/book';\n\nexport enum CollectionActionTypes {\n  AddBook = '[Collection] Add Book',\n  AddBookSuccess = '[Collection] Add Book Success',\n  AddBookFail = '[Collection] Add Book Fail',\n  RemoveBook = '[Collection] Remove Book',\n  RemoveBookSuccess = '[Collection] Remove Book Success',\n  RemoveBookFail = '[Collection] Remove Book Fail',\n  Load = '[Collection] Load',\n  LoadSuccess = '[Collection] Load Success',\n  LoadFail = '[Collection] Load Fail',\n}\n\n/**\n * Add Book to Collection Actions\n */\nexport class AddBook implements Action {\n  readonly type = CollectionActionTypes.AddBook;\n\n  constructor(public payload: Book) {}\n}\n\nexport class AddBookSuccess implements Action {\n  readonly type = CollectionActionTypes.AddBookSuccess;\n\n  constructor(public payload: Book) {}\n}\n\nexport class AddBookFail implements Action {\n  readonly type = CollectionActionTypes.AddBookFail;\n\n  constructor(public payload: Book) {}\n}\n\n/**\n * Remove Book from Collection Actions\n */\nexport class RemoveBook implements Action {\n  readonly type = CollectionActionTypes.RemoveBook;\n\n  constructor(public payload: Book) {}\n}\n\nexport class RemoveBookSuccess implements Action {\n  readonly type = CollectionActionTypes.RemoveBookSuccess;\n\n  constructor(public payload: Book) {}\n}\n\nexport class RemoveBookFail implements Action {\n  readonly type = CollectionActionTypes.RemoveBookFail;\n\n  constructor(public payload: Book) {}\n}\n\n/**\n * Load Collection Actions\n */\nexport class Load implements Action {\n  readonly type = CollectionActionTypes.Load;\n}\n\nexport class LoadSuccess implements Action {\n  readonly type = CollectionActionTypes.LoadSuccess;\n\n  constructor(public payload: Book[]) {}\n}\n\nexport class LoadFail implements Action {\n  readonly type = CollectionActionTypes.LoadFail;\n\n  constructor(public payload: any) {}\n}\n\nexport type CollectionActionsUnion =\n  | AddBook\n  | AddBookSuccess\n  | AddBookFail\n  | RemoveBook\n  | RemoveBookSuccess\n  | RemoveBookFail\n  | Load\n  | LoadSuccess\n  | LoadFail;\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FindBookPageComponent } from './containers/find-book-page.component';\nimport { ViewBookPageComponent } from './containers/view-book-page.component';\nimport { CollectionPageComponent } from './containers/collection-page.component';\nimport { BookExistsGuard } from './guards/book-exists.guard';\n\nexport const routes: Routes = [\n  { path: 'find', component: FindBookPageComponent },\n  {\n    path: ':id',\n    component: ViewBookPageComponent,\n    canActivate: [BookExistsGuard],\n  },\n  { path: '', component: CollectionPageComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BooksRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { ComponentsModule } from './components';\nimport { BookEffects } from './effects/book.effects';\nimport { CollectionEffects } from './effects/collection.effects';\nimport { BookExistsGuard } from './guards/book-exists.guard';\n\nimport { FindBookPageComponent } from './containers/find-book-page.component';\nimport { ViewBookPageComponent } from './containers/view-book-page.component';\nimport { SelectedBookPageComponent } from './containers/selected-book-page.component';\nimport { CollectionPageComponent } from './containers/collection-page.component';\nimport { MaterialModule } from '../material';\n\nimport { reducers } from './reducers';\nimport { BooksRoutingModule } from './books-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialModule,\n    ComponentsModule,\n    BooksRoutingModule,\n\n    /**\n     * StoreModule.forFeature is used for composing state\n     * from feature modules. These modules can be loaded\n     * eagerly or lazily and will be dynamically added to\n     * the existing state.\n     */\n    StoreModule.forFeature('books', reducers),\n\n    /**\n     * Effects.forFeature is used to register effects\n     * from feature modules. Effects can be loaded\n     * eagerly or lazily and will be started immediately.\n     *\n     * All Effects will only be instantiated once regardless of\n     * whether they are registered once or multiple times.\n     */\n    EffectsModule.forFeature([BookEffects, CollectionEffects]),\n  ],\n  declarations: [\n    FindBookPageComponent,\n    ViewBookPageComponent,\n    SelectedBookPageComponent,\n    CollectionPageComponent,\n  ],\n  providers: [BookExistsGuard],\n})\nexport class BooksModule {}\n","\n    <h5 mat-subheader>Written By:</h5>\n    <span>\n      {{ authors | bcAddCommas }}\n    </span>\n  ","import { Component, Input } from '@angular/core';\n\nimport { Book } from '../models/book';\n\n@Component({\n  selector: 'bc-book-authors',\n  template: `\n    <h5 mat-subheader>Written By:</h5>\n    <span>\n      {{ authors | bcAddCommas }}\n    </span>\n  `,\n  styles: [\n    `\n      h5 {\n        margin-bottom: 5px;\n      }\n    `,\n  ],\n})\nexport class BookAuthorsComponent {\n  @Input() book: Book;\n\n  get authors() {\n    return this.book.volumeInfo.authors;\n  }\n}\n","\n    <mat-card *ngIf=\"book\">\n      <mat-card-title-group>\n        <mat-card-title>{{ title }}</mat-card-title>\n        <mat-card-subtitle *ngIf=\"subtitle\">{{ subtitle }}</mat-card-subtitle>\n        <img mat-card-sm-image *ngIf=\"thumbnail\" [src]=\"thumbnail\"/>\n      </mat-card-title-group>\n      <mat-card-content>\n        <p [innerHtml]=\"description\"></p>\n      </mat-card-content>\n      <mat-card-footer class=\"footer\">\n        <bc-book-authors [book]=\"book\"></bc-book-authors>\n      </mat-card-footer>\n      <mat-card-actions align=\"start\">\n        <button mat-raised-button color=\"warn\" *ngIf=\"inCollection\" (click)=\"remove.emit(book)\">\n        Remove Book from Collection\n        </button>\n\n        <button mat-raised-button color=\"primary\" *ngIf=\"!inCollection\" (click)=\"add.emit(book)\">\n        Add Book to Collection\n        </button>\n      </mat-card-actions>\n    </mat-card>\n\n  ","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Book } from '../models/book';\n\n@Component({\n  selector: 'bc-book-detail',\n  template: `\n    <mat-card *ngIf=\"book\">\n      <mat-card-title-group>\n        <mat-card-title>{{ title }}</mat-card-title>\n        <mat-card-subtitle *ngIf=\"subtitle\">{{ subtitle }}</mat-card-subtitle>\n        <img mat-card-sm-image *ngIf=\"thumbnail\" [src]=\"thumbnail\"/>\n      </mat-card-title-group>\n      <mat-card-content>\n        <p [innerHtml]=\"description\"></p>\n      </mat-card-content>\n      <mat-card-footer class=\"footer\">\n        <bc-book-authors [book]=\"book\"></bc-book-authors>\n      </mat-card-footer>\n      <mat-card-actions align=\"start\">\n        <button mat-raised-button color=\"warn\" *ngIf=\"inCollection\" (click)=\"remove.emit(book)\">\n        Remove Book from Collection\n        </button>\n\n        <button mat-raised-button color=\"primary\" *ngIf=\"!inCollection\" (click)=\"add.emit(book)\">\n        Add Book to Collection\n        </button>\n      </mat-card-actions>\n    </mat-card>\n\n  `,\n  styles: [\n    `\n      :host {\n        display: flex;\n        justify-content: center;\n        margin: 75px 0;\n      }\n      mat-card {\n        max-width: 600px;\n      }\n      mat-card-title-group {\n        margin-left: 0;\n      }\n      img {\n        width: 60px;\n        min-width: 60px;\n        margin-left: 5px;\n      }\n      mat-card-content {\n        margin: 15px 0 50px;\n      }\n      mat-card-actions {\n        margin: 25px 0 0 !important;\n      }\n      mat-card-footer {\n        padding: 0 25px 25px;\n        position: relative;\n      }\n    `,\n  ],\n})\nexport class BookDetailComponent {\n  /**\n   * Presentational components receive data through @Input() and communicate events\n   * through @Output() but generally maintain no internal state of their\n   * own. All decisions are delegated to 'container', or 'smart'\n   * components before data updates flow back down.\n   *\n   * More on 'smart' and 'presentational' components: https://gist.github.com/btroncone/a6e4347326749f938510#utilizing-container-components\n   */\n  @Input() book: Book;\n  @Input() inCollection: boolean;\n  @Output() add = new EventEmitter<Book>();\n  @Output() remove = new EventEmitter<Book>();\n\n  /**\n   * Tip: Utilize getters to keep templates clean\n   */\n  get id() {\n    return this.book.id;\n  }\n\n  get title() {\n    return this.book.volumeInfo.title;\n  }\n\n  get subtitle() {\n    return this.book.volumeInfo.subtitle;\n  }\n\n  get description() {\n    return this.book.volumeInfo.description;\n  }\n\n  get thumbnail() {\n    return (\n      this.book.volumeInfo.imageLinks &&\n      this.book.volumeInfo.imageLinks.smallThumbnail &&\n      this.book.volumeInfo.imageLinks.smallThumbnail.replace('http:', '')\n    );\n  }\n}\n","\n    <bc-book-preview *ngFor=\"let book of books\" [book]=\"book\"></bc-book-preview>\n  ","import { Component, Input } from '@angular/core';\nimport { Book } from '../models/book';\n\n@Component({\n  selector: 'bc-book-preview-list',\n  template: `\n    <bc-book-preview *ngFor=\"let book of books\" [book]=\"book\"></bc-book-preview>\n  `,\n  styles: [\n    `\n      :host {\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center;\n      }\n    `,\n  ],\n})\nexport class BookPreviewListComponent {\n  @Input() books: Book[];\n}\n","\n    <a [routerLink]=\"['/books', id]\">\n      <mat-card>\n        <mat-card-title-group>\n          <img mat-card-sm-image *ngIf=\"thumbnail\" [src]=\"thumbnail\"/>\n          <mat-card-title>{{ title | bcEllipsis:35 }}</mat-card-title>\n          <mat-card-subtitle *ngIf=\"subtitle\">{{ subtitle | bcEllipsis:40 }}</mat-card-subtitle>\n        </mat-card-title-group>\n        <mat-card-content>\n          <p *ngIf=\"description\">{{ description | bcEllipsis }}</p>\n        </mat-card-content>\n        <mat-card-footer>\n          <bc-book-authors [book]=\"book\"></bc-book-authors>\n        </mat-card-footer>\n      </mat-card>\n    </a>\n  ","import { Component, Input } from '@angular/core';\nimport { Book } from '../models/book';\n\n@Component({\n  selector: 'bc-book-preview',\n  template: `\n    <a [routerLink]=\"['/books', id]\">\n      <mat-card>\n        <mat-card-title-group>\n          <img mat-card-sm-image *ngIf=\"thumbnail\" [src]=\"thumbnail\"/>\n          <mat-card-title>{{ title | bcEllipsis:35 }}</mat-card-title>\n          <mat-card-subtitle *ngIf=\"subtitle\">{{ subtitle | bcEllipsis:40 }}</mat-card-subtitle>\n        </mat-card-title-group>\n        <mat-card-content>\n          <p *ngIf=\"description\">{{ description | bcEllipsis }}</p>\n        </mat-card-content>\n        <mat-card-footer>\n          <bc-book-authors [book]=\"book\"></bc-book-authors>\n        </mat-card-footer>\n      </mat-card>\n    </a>\n  `,\n  styles: [\n    `\n      :host {\n        display: flex;\n      }\n\n      :host a {\n        display: flex;\n      }\n\n      mat-card {\n        width: 400px;\n        margin: 15px;\n        display: flex;\n        flex-flow: column;\n        justify-content: space-between;\n      }\n\n      @media only screen and (max-width: 768px) {\n        mat-card {\n          margin: 15px 0 !important;\n        }\n      }\n      mat-card:hover {\n        box-shadow: 3px 3px 16px -2px rgba(0, 0, 0, 0.5);\n      }\n      mat-card-title {\n        margin-right: 10px;\n      }\n      mat-card-title-group {\n        margin: 0;\n      }\n      a {\n        color: inherit;\n        text-decoration: none;\n      }\n      img {\n        width: 60px;\n        min-width: 60px;\n        margin-left: 5px;\n      }\n      mat-card-content {\n        margin-top: 15px;\n        margin: 15px 0 0;\n      }\n      span {\n        display: inline-block;\n        font-size: 13px;\n      }\n      mat-card-footer {\n        padding: 0 25px 25px;\n      }\n    `,\n  ],\n})\nexport class BookPreviewComponent {\n  @Input() book: Book;\n\n  get id() {\n    return this.book.id;\n  }\n\n  get title() {\n    return this.book.volumeInfo.title;\n  }\n\n  get subtitle() {\n    return this.book.volumeInfo.subtitle;\n  }\n\n  get description() {\n    return this.book.volumeInfo.description;\n  }\n\n  get thumbnail(): string | boolean {\n    if (this.book.volumeInfo.imageLinks) {\n      return this.book.volumeInfo.imageLinks.smallThumbnail.replace(\n        'http:',\n        ''\n      );\n    }\n\n    return false;\n  }\n}\n","\n    <mat-card>\n      <mat-card-title>Find a Book</mat-card-title>\n      <mat-card-content>\n        <mat-form-field>\n          <input matInput placeholder=\"Search for a book or ''*'' for a full list\" [value]=\"query\" (keyup)=\"search.emit($event.target.value)\">\n        </mat-form-field>\n        <mat-spinner [class.show]=\"searching\" [diameter]=\"30\" [strokeWidth]=\"3\"></mat-spinner>\n      </mat-card-content>\n      <mat-card-footer><span *ngIf=\"error\">{{error}}</span></mat-card-footer>\n    </mat-card>\n  ","import { Component, Output, Input, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'bc-book-search',\n  template: `\n    <mat-card>\n      <mat-card-title>Find a Book</mat-card-title>\n      <mat-card-content>\n        <mat-form-field>\n          <input matInput placeholder=\"Search for a book or ''*'' for a full list\" [value]=\"query\" (keyup)=\"search.emit($event.target.value)\">\n        </mat-form-field>\n        <mat-spinner [class.show]=\"searching\" [diameter]=\"30\" [strokeWidth]=\"3\"></mat-spinner>\n      </mat-card-content>\n      <mat-card-footer><span *ngIf=\"error\">{{error}}</span></mat-card-footer>\n    </mat-card>\n  `,\n  styles: [\n    `\n      mat-card-title,\n      mat-card-content,\n      mat-card-footer {\n        display: flex;\n        justify-content: center;\n      }\n\n      mat-card-footer {\n        color: #ff0000;\n        padding: 5px 0;\n      }\n\n      .mat-form-field {\n        min-width: 300px;\n      }\n\n      .mat-spinner {\n        position: relative;\n        top: 10px;\n        left: 10px;\n        opacity: 0;\n        padding-left: 60px; // Make room for the spinner\n      }\n\n      .mat-spinner.show {\n        opacity: 1;\n      }\n    `,\n  ],\n})\nexport class BookSearchComponent {\n  @Input() query = '';\n  @Input() searching = false;\n  @Input() error = '';\n  @Output() search = new EventEmitter<string>();\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { BookAuthorsComponent } from './book-authors.component';\nimport { BookDetailComponent } from './book-detail.component';\nimport { BookPreviewComponent } from './book-preview.component';\nimport { BookPreviewListComponent } from './book-preview-list.component';\nimport { BookSearchComponent } from './book-search.component';\n\nimport { PipesModule } from '../../shared/pipes';\nimport { MaterialModule } from '../../material';\n\nexport const COMPONENTS = [\n  BookAuthorsComponent,\n  BookDetailComponent,\n  BookPreviewComponent,\n  BookPreviewListComponent,\n  BookSearchComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    RouterModule,\n    PipesModule,\n  ],\n  declarations: COMPONENTS,\n  exports: COMPONENTS,\n})\nexport class ComponentsModule {}\n","\n    <mat-card>\n      <mat-card-title>My Collection</mat-card-title>\n    </mat-card>\n\n    <bc-book-preview-list [books]=\"books$ | async\"></bc-book-preview-list>\n  ","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport * as CollectionActions from '../actions/collection.actions';\nimport { Book } from '../models/book';\nimport * as fromBooks from '../reducers';\n\n@Component({\n  selector: 'bc-collection-page',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <mat-card>\n      <mat-card-title>My Collection</mat-card-title>\n    </mat-card>\n\n    <bc-book-preview-list [books]=\"books$ | async\"></bc-book-preview-list>\n  `,\n  /**\n   * Container components are permitted to have just enough styles\n   * to bring the view together. If the number of styles grow,\n   * consider breaking them out into presentational\n   * components.\n   */\n  styles: [\n    `\n      mat-card-title {\n        display: flex;\n        justify-content: center;\n      }\n    `,\n  ],\n})\nexport class CollectionPageComponent implements OnInit {\n  books$: Observable<Book[]>;\n\n  constructor(private store: Store<fromBooks.State>) {\n    this.books$ = store.pipe(select(fromBooks.getBookCollection));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(new CollectionActions.Load());\n  }\n}\n","\n    <bc-book-search [query]=\"searchQuery$ | async\" [searching]=\"loading$ | async\" [error]=\"error$ | async\" (search)=\"search($event)\"></bc-book-search>\n    <bc-book-preview-list [books]=\"books$ | async\"></bc-book-preview-list>\n  ","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport * as BookActions from '../actions/book.actions';\nimport { Book } from '../models/book';\nimport * as fromBooks from '../reducers';\n\n@Component({\n  selector: 'bc-find-book-page',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <bc-book-search [query]=\"searchQuery$ | async\" [searching]=\"loading$ | async\" [error]=\"error$ | async\" (search)=\"search($event)\"></bc-book-search>\n    <bc-book-preview-list [books]=\"books$ | async\"></bc-book-preview-list>\n  `,\n})\nexport class FindBookPageComponent {\n  searchQuery$: Observable<string>;\n  books$: Observable<Book[]>;\n  loading$: Observable<boolean>;\n  error$: Observable<string>;\n\n  constructor(private store: Store<fromBooks.State>) {\n    this.searchQuery$ = store.pipe(\n      select(fromBooks.getSearchQuery),\n      take(1)\n    );\n    this.books$ = store.pipe(select(fromBooks.getSearchResults));\n    this.loading$ = store.pipe(select(fromBooks.getSearchLoading));\n    this.error$ = store.pipe(select(fromBooks.getSearchError));\n  }\n\n  search(query: string) {\n    this.store.dispatch(new BookActions.Search(query));\n  }\n}\n","\n    <bc-book-detail\n      [book]=\"book$ | async\"\n      [inCollection]=\"isSelectedBookInCollection$ | async\"\n      (add)=\"addToCollection($event)\"\n      (remove)=\"removeFromCollection($event)\">\n    </bc-book-detail>\n  ","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport * as fromBooks from '../reducers';\nimport * as CollectionActions from '../actions/collection.actions';\nimport { Book } from '../models/book';\n\n@Component({\n  selector: 'bc-selected-book-page',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <bc-book-detail\n      [book]=\"book$ | async\"\n      [inCollection]=\"isSelectedBookInCollection$ | async\"\n      (add)=\"addToCollection($event)\"\n      (remove)=\"removeFromCollection($event)\">\n    </bc-book-detail>\n  `,\n})\nexport class SelectedBookPageComponent {\n  book$: Observable<Book>;\n  isSelectedBookInCollection$: Observable<boolean>;\n\n  constructor(private store: Store<fromBooks.State>) {\n    this.book$ = store.pipe(select(fromBooks.getSelectedBook)) as Observable<\n      Book\n    >;\n    this.isSelectedBookInCollection$ = store.pipe(\n      select(fromBooks.isSelectedBookInCollection)\n    );\n  }\n\n  addToCollection(book: Book) {\n    this.store.dispatch(new CollectionActions.AddBook(book));\n  }\n\n  removeFromCollection(book: Book) {\n    this.store.dispatch(new CollectionActions.RemoveBook(book));\n  }\n}\n","\n    <bc-selected-book-page></bc-selected-book-page>\n  ","import { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport * as fromBooks from '../reducers';\nimport * as BookActions from '../actions/book.actions';\n\n/**\n * Note: Container components are also reusable. Whether or not\n * a component is a presentation component or a container\n * component is an implementation detail.\n *\n * The View Book Page's responsibility is to map router params\n * to a 'Select' book action. Actually showing the selected\n * book remains a responsibility of the\n * SelectedBookPageComponent\n */\n@Component({\n  selector: 'bc-view-book-page',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <bc-selected-book-page></bc-selected-book-page>\n  `,\n})\nexport class ViewBookPageComponent implements OnDestroy {\n  actionsSubscription: Subscription;\n\n  constructor(store: Store<fromBooks.State>, route: ActivatedRoute) {\n    this.actionsSubscription = route.params\n      .pipe(map(params => new BookActions.Select(params.id)))\n      .subscribe(store);\n  }\n\n  ngOnDestroy() {\n    this.actionsSubscription.unsubscribe();\n  }\n}\n","import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { asyncScheduler, empty, Observable, of } from 'rxjs';\nimport {\n  catchError,\n  debounceTime,\n  map,\n  skip,\n  switchMap,\n  takeUntil,\n} from 'rxjs/operators';\n\nimport { GoogleBooksService } from '../../core/services/google-books.service';\nimport {\n  BookActionTypes,\n  Search,\n  SearchComplete,\n  SearchError,\n} from '../actions/book.actions';\nimport { Book } from '../models/book';\nimport { Scheduler } from 'rxjs/internal/Scheduler';\n\nexport const SEARCH_DEBOUNCE = new InjectionToken<number>('Search Debounce');\nexport const SEARCH_SCHEDULER = new InjectionToken<Scheduler>(\n  'Search Scheduler'\n);\n\n/**\n * Effects offer a way to isolate and easily test side-effects within your\n * application.\n *\n * If you are unfamiliar with the operators being used in these examples, please\n * check out the sources below:\n *\n * Official Docs: http://reactivex.io/rxjs/manual/overview.html#categories-of-operators\n * RxJS 5 Operators By Example: https://gist.github.com/btroncone/d6cf141d6f2c00dc6b35\n */\n\n@Injectable()\nexport class BookEffects {\n  @Effect()\n  search$: Observable<Action> = this.actions$.pipe(\n    ofType<Search>(BookActionTypes.Search),\n    debounceTime(this.debounce || 300, this.scheduler || asyncScheduler),\n    map(action => action.payload),\n    switchMap(query => {\n      if (query === '') {\n        return empty();\n      }\n\n      const nextSearch$ = this.actions$.pipe(\n        ofType(BookActionTypes.Search),\n        skip(1)\n      );\n\n      return this.googleBooks.searchBooks(query).pipe(\n        takeUntil(nextSearch$),\n        map((books: Book[]) => new SearchComplete(books)),\n        catchError(err => of(new SearchError(err)))\n      );\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private googleBooks: GoogleBooksService,\n    @Optional()\n    @Inject(SEARCH_DEBOUNCE)\n    private debounce: number,\n    /**\n     * You inject an optional Scheduler that will be undefined\n     * in normal application usage, but its injected here so that you can mock out\n     * during testing using the RxJS TestScheduler for simulating passages of time.\n     */\n    @Optional()\n    @Inject(SEARCH_SCHEDULER)\n    private scheduler: Scheduler\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Database } from '@ngrx/db';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { defer, Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap, toArray } from 'rxjs/operators';\n\nimport { Book } from '../models/book';\nimport {\n  AddBook,\n  AddBookFail,\n  AddBookSuccess,\n  CollectionActionTypes,\n  LoadFail,\n  LoadSuccess,\n  RemoveBook,\n  RemoveBookFail,\n  RemoveBookSuccess,\n} from './../actions/collection.actions';\n\n@Injectable()\nexport class CollectionEffects {\n  /**\n   * This effect does not yield any actions back to the store. Set\n   * `dispatch` to false to hint to @ngrx/effects that it should\n   * ignore any elements of this effect stream.\n   *\n   * The `defer` observable accepts an observable factory function\n   * that is called when the observable is subscribed to.\n   * Wrapping the database open call in `defer` makes\n   * effect easier to test.\n   */\n  @Effect({ dispatch: false })\n  openDB$: Observable<any> = defer(() => {\n    return this.db.open('books_app');\n  });\n\n  @Effect()\n  loadCollection$: Observable<Action> = this.actions$.pipe(\n    ofType(CollectionActionTypes.Load),\n    switchMap(() =>\n      this.db.query('books').pipe(\n        toArray(),\n        map((books: Book[]) => new LoadSuccess(books)),\n        catchError(error => of(new LoadFail(error)))\n      )\n    )\n  );\n\n  @Effect()\n  addBookToCollection$: Observable<Action> = this.actions$.pipe(\n    ofType<AddBook>(CollectionActionTypes.AddBook),\n    map(action => action.payload),\n    mergeMap(book =>\n      this.db.insert('books', [book]).pipe(\n        map(() => new AddBookSuccess(book)),\n        catchError(() => of(new AddBookFail(book)))\n      )\n    )\n  );\n\n  @Effect()\n  removeBookFromCollection$: Observable<Action> = this.actions$.pipe(\n    ofType<RemoveBook>(CollectionActionTypes.RemoveBook),\n    map(action => action.payload),\n    mergeMap(book =>\n      this.db.executeWrite('books', 'delete', [book.id]).pipe(\n        map(() => new RemoveBookSuccess(book)),\n        catchError(() => of(new RemoveBookFail(book)))\n      )\n    )\n  );\n\n  constructor(private actions$: Actions, private db: Database) {}\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router } from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { catchError, filter, map, switchMap, take, tap } from 'rxjs/operators';\n\nimport { GoogleBooksService } from '../../core/services/google-books.service';\nimport * as BookActions from '../actions/book.actions';\nimport * as fromBooks from '../reducers';\n\n/**\n * Guards are hooks into the route resolution process, providing an opportunity\n * to inform the router's navigation process whether the route should continue\n * to activate this route. Guards must return an observable of true or false.\n */\n@Injectable()\nexport class BookExistsGuard implements CanActivate {\n  constructor(\n    private store: Store<fromBooks.State>,\n    private googleBooks: GoogleBooksService,\n    private router: Router\n  ) {}\n\n  /**\n   * This method creates an observable that waits for the `loaded` property\n   * of the collection state to turn `true`, emitting one time once loading\n   * has finished.\n   */\n  waitForCollectionToLoad(): Observable<boolean> {\n    return this.store.pipe(\n      select(fromBooks.getCollectionLoaded),\n      filter(loaded => loaded),\n      take(1)\n    );\n  }\n\n  /**\n   * This method checks if a book with the given ID is already registered\n   * in the Store\n   */\n  hasBookInStore(id: string): Observable<boolean> {\n    return this.store.pipe(\n      select(fromBooks.getBookEntities),\n      map(entities => !!entities[id]),\n      take(1)\n    );\n  }\n\n  /**\n   * This method loads a book with the given ID from the API and caches\n   * it in the store, returning `true` or `false` if it was found.\n   */\n  hasBookInApi(id: string): Observable<boolean> {\n    return this.googleBooks.retrieveBook(id).pipe(\n      map(bookEntity => new BookActions.Load(bookEntity)),\n      tap((action: BookActions.Load) => this.store.dispatch(action)),\n      map(book => !!book),\n      catchError(() => {\n        this.router.navigate(['/404']);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * `hasBook` composes `hasBookInStore` and `hasBookInApi`. It first checks\n   * if the book is in store, and if not it then checks if it is in the\n   * API.\n   */\n  hasBook(id: string): Observable<boolean> {\n    return this.hasBookInStore(id).pipe(\n      switchMap(inStore => {\n        if (inStore) {\n          return of(inStore);\n        }\n\n        return this.hasBookInApi(id);\n      })\n    );\n  }\n\n  /**\n   * This is the actual method the router will call when our guard is run.\n   *\n   * Our guard waits for the collection to load, then it checks if we need\n   * to request a book from the API or if we already have it in our cache.\n   * If it finds it in the cache or in the API, it returns an Observable\n   * of `true` and the route is rendered successfully.\n   *\n   * If it was unable to find it in our cache or in the API, this guard\n   * will return an Observable of `false`, causing the router to move\n   * on to the next candidate route. In this case, it will move on\n   * to the 404 page.\n   */\n  canActivate(route: ActivatedRouteSnapshot): Observable<boolean> {\n    return this.waitForCollectionToLoad().pipe(\n      switchMap(() => this.hasBook(route.params['id']))\n    );\n  }\n}\n","import { createSelector } from '@ngrx/store';\nimport { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { Book } from '../models/book';\nimport { BookActionsUnion, BookActionTypes } from '../actions/book.actions';\nimport {\n  CollectionActionsUnion,\n  CollectionActionTypes,\n} from '../actions/collection.actions';\n\n/**\n * @ngrx/entity provides a predefined interface for handling\n * a structured dictionary of records. This interface\n * includes an array of ids, and a dictionary of the provided\n * model type by id. This interface is extended to include\n * any additional interface properties.\n */\nexport interface State extends EntityState<Book> {\n  selectedBookId: string | null;\n}\n\n/**\n * createEntityAdapter creates an object of many helper\n * functions for single or multiple operations\n * against the dictionary of records. The configuration\n * object takes a record id selector function and\n * a sortComparer option which is set to a compare\n * function if the records are to be sorted.\n */\nexport const adapter: EntityAdapter<Book> = createEntityAdapter<Book>({\n  selectId: (book: Book) => book.id,\n  sortComparer: false,\n});\n\n/**\n * getInitialState returns the default initial state\n * for the generated entity state. Initial state\n * additional properties can also be defined.\n */\nexport const initialState: State = adapter.getInitialState({\n  selectedBookId: null,\n});\n\nexport function reducer(\n  state = initialState,\n  action: BookActionsUnion | CollectionActionsUnion\n): State {\n  switch (action.type) {\n    case BookActionTypes.SearchComplete:\n    case CollectionActionTypes.LoadSuccess: {\n      /**\n       * The addMany function provided by the created adapter\n       * adds many records to the entity dictionary\n       * and returns a new state including those records. If\n       * the collection is to be sorted, the adapter will\n       * sort each record upon entry into the sorted array.\n       */\n      return adapter.addMany(action.payload, {\n        ...state,\n        selectedBookId: state.selectedBookId,\n      });\n    }\n\n    case BookActionTypes.Load: {\n      /**\n       * The addOne function provided by the created adapter\n       * adds one record to the entity dictionary\n       * and returns a new state including that records if it doesn't\n       * exist already. If the collection is to be sorted, the adapter will\n       * insert the new record into the sorted array.\n       */\n      return adapter.addOne(action.payload, {\n        ...state,\n        selectedBookId: state.selectedBookId,\n      });\n    }\n\n    case BookActionTypes.Select: {\n      return {\n        ...state,\n        selectedBookId: action.payload,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\n/**\n * Because the data structure is defined within the reducer it is optimal to\n * locate our selector functions at this level. If store is to be thought of\n * as a database, and reducers the tables, selectors can be considered the\n * queries into said database. Remember to keep your selectors small and\n * focused so they can be combined and composed to fit each particular\n * use-case.\n */\n\nexport const getSelectedId = (state: State) => state.selectedBookId;\n","import {\n  CollectionActionTypes,\n  CollectionActionsUnion,\n} from './../actions/collection.actions';\n\nexport interface State {\n  loaded: boolean;\n  loading: boolean;\n  ids: string[];\n}\n\nconst initialState: State = {\n  loaded: false,\n  loading: false,\n  ids: [],\n};\n\nexport function reducer(\n  state = initialState,\n  action: CollectionActionsUnion\n): State {\n  switch (action.type) {\n    case CollectionActionTypes.Load: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n\n    case CollectionActionTypes.LoadSuccess: {\n      return {\n        loaded: true,\n        loading: false,\n        ids: action.payload.map(book => book.id),\n      };\n    }\n\n    case CollectionActionTypes.AddBookSuccess:\n    case CollectionActionTypes.RemoveBookFail: {\n      if (state.ids.indexOf(action.payload.id) > -1) {\n        return state;\n      }\n\n      return {\n        ...state,\n        ids: [...state.ids, action.payload.id],\n      };\n    }\n\n    case CollectionActionTypes.RemoveBookSuccess:\n    case CollectionActionTypes.AddBookFail: {\n      return {\n        ...state,\n        ids: state.ids.filter(id => id !== action.payload.id),\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const getLoaded = (state: State) => state.loaded;\n\nexport const getLoading = (state: State) => state.loading;\n\nexport const getIds = (state: State) => state.ids;\n","import {\n  createSelector,\n  createFeatureSelector,\n  ActionReducerMap,\n} from '@ngrx/store';\nimport * as fromSearch from './search.reducer';\nimport * as fromBooks from './books.reducer';\nimport * as fromCollection from './collection.reducer';\nimport * as fromRoot from '../../reducers';\n\nexport interface BooksState {\n  search: fromSearch.State;\n  books: fromBooks.State;\n  collection: fromCollection.State;\n}\n\nexport interface State extends fromRoot.State {\n  books: BooksState;\n}\n\nexport const reducers: ActionReducerMap<BooksState> = {\n  search: fromSearch.reducer,\n  books: fromBooks.reducer,\n  collection: fromCollection.reducer,\n};\n\n/**\n * A selector function is a map function factory. We pass it parameters and it\n * returns a function that maps from the larger state tree into a smaller\n * piece of state. This selector simply selects the `books` state.\n *\n * Selectors are used with the `select` operator.\n *\n * ```ts\n * class MyComponent {\n *   constructor(state$: Observable<State>) {\n *     this.booksState$ = state$.pipe(select(getBooksState));\n *   }\n * }\n * ```\n */\n\n/**\n * The createFeatureSelector function selects a piece of state from the root of the state object.\n * This is used for selecting feature states that are loaded eagerly or lazily.\n */\nexport const getBooksState = createFeatureSelector<State, BooksState>('books');\n\n/**\n * Every reducer module exports selector functions, however child reducers\n * have no knowledge of the overall state tree. To make them usable, we\n * need to make new selectors that wrap them.\n *\n * The createSelector function creates very efficient selectors that are memoized and\n * only recompute when arguments change. The created selectors can also be composed\n * together to select different pieces of state.\n */\nexport const getBookEntitiesState = createSelector(\n  getBooksState,\n  state => state.books\n);\n\nexport const getSelectedBookId = createSelector(\n  getBookEntitiesState,\n  fromBooks.getSelectedId\n);\n\n/**\n * Adapters created with @ngrx/entity generate\n * commonly used selector functions including\n * getting all ids in the record set, a dictionary\n * of the records by id, an array of records and\n * the total number of records. This reduces boilerplate\n * in selecting records from the entity state.\n */\nexport const {\n  selectIds: getBookIds,\n  selectEntities: getBookEntities,\n  selectAll: getAllBooks,\n  selectTotal: getTotalBooks,\n} = fromBooks.adapter.getSelectors(getBookEntitiesState);\n\nexport const getSelectedBook = createSelector(\n  getBookEntities,\n  getSelectedBookId,\n  (entities, selectedId) => {\n    return selectedId && entities[selectedId];\n  }\n);\n\n/**\n * Just like with the books selectors, we also have to compose the search\n * reducer's and collection reducer's selectors.\n */\nexport const getSearchState = createSelector(\n  getBooksState,\n  (state: BooksState) => state.search\n);\n\nexport const getSearchBookIds = createSelector(\n  getSearchState,\n  fromSearch.getIds\n);\nexport const getSearchQuery = createSelector(\n  getSearchState,\n  fromSearch.getQuery\n);\nexport const getSearchLoading = createSelector(\n  getSearchState,\n  fromSearch.getLoading\n);\nexport const getSearchError = createSelector(\n  getSearchState,\n  fromSearch.getError\n);\n\n/**\n * Some selector functions create joins across parts of state. This selector\n * composes the search result IDs to return an array of books in the store.\n */\nexport const getSearchResults = createSelector(\n  getBookEntities,\n  getSearchBookIds,\n  (books, searchIds) => {\n    return searchIds.map(id => books[id]);\n  }\n);\n\nexport const getCollectionState = createSelector(\n  getBooksState,\n  (state: BooksState) => state.collection\n);\n\nexport const getCollectionLoaded = createSelector(\n  getCollectionState,\n  fromCollection.getLoaded\n);\nexport const getCollectionLoading = createSelector(\n  getCollectionState,\n  fromCollection.getLoading\n);\nexport const getCollectionBookIds = createSelector(\n  getCollectionState,\n  fromCollection.getIds\n);\n\nexport const getBookCollection = createSelector(\n  getBookEntities,\n  getCollectionBookIds,\n  (entities, ids) => {\n    return ids.map(id => entities[id]);\n  }\n);\n\nexport const isSelectedBookInCollection = createSelector(\n  getCollectionBookIds,\n  getSelectedBookId,\n  (ids, selected) => {\n    return ids.indexOf(selected) > -1;\n  }\n);\n","import { BookActionTypes, BookActionsUnion } from '../actions/book.actions';\n\nexport interface State {\n  ids: string[];\n  loading: boolean;\n  error: string;\n  query: string;\n}\n\nconst initialState: State = {\n  ids: [],\n  loading: false,\n  error: '',\n  query: '',\n};\n\nexport function reducer(state = initialState, action: BookActionsUnion): State {\n  switch (action.type) {\n    case BookActionTypes.Search: {\n      const query = action.payload;\n\n      if (query === '') {\n        return {\n          ids: [],\n          loading: false,\n          error: '',\n          query,\n        };\n      }\n\n      return {\n        ...state,\n        loading: true,\n        error: '',\n        query,\n      };\n    }\n\n    case BookActionTypes.SearchComplete: {\n      return {\n        ids: action.payload.map(book => book.id),\n        loading: false,\n        error: '',\n        query: state.query,\n      };\n    }\n\n    case BookActionTypes.SearchError: {\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const getIds = (state: State) => state.ids;\n\nexport const getQuery = (state: State) => state.query;\n\nexport const getLoading = (state: State) => state.loading;\n\nexport const getError = (state: State) => state.error;\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'bcAddCommas' })\nexport class AddCommasPipe implements PipeTransform {\n  transform(authors: null | string[]) {\n    if (!authors) {\n      return 'Author Unknown';\n    }\n\n    switch (authors.length) {\n      case 0:\n        return 'Author Unknown';\n      case 1:\n        return authors[0];\n      case 2:\n        return authors.join(' and ');\n      default:\n        const last = authors[authors.length - 1];\n        const remaining = authors.slice(0, -1);\n        return `${remaining.join(', ')}, and ${last}`;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'bcEllipsis' })\nexport class EllipsisPipe implements PipeTransform {\n  transform(str: string, strLength: number = 250) {\n    const withoutHtml = str.replace(/(<([^>]+)>)/gi, '');\n\n    if (str.length >= strLength) {\n      return `${withoutHtml.slice(0, strLength)}...`;\n    }\n\n    return withoutHtml;\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { AddCommasPipe } from './add-commas.pipe';\nimport { EllipsisPipe } from './ellipsis.pipe';\n\nexport const PIPES = [AddCommasPipe, EllipsisPipe];\n\n@NgModule({\n  declarations: PIPES,\n  exports: PIPES,\n})\nexport class PipesModule {}\n"],"sourceRoot":""}